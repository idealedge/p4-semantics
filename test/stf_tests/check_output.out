test_data/07-MultiProtocol.out
output
('10101010101010101010101010101010101010101010101010111011101110111011101110111011101110111011101100001000000000000100010100000000000000000010110000000000000000000000000001100101010000000001000101101100010101010000000100000010000000110000010000001010000000000000000000000010000000000110010000000000011001010000000000010000000000000000000000000000000000010000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111', '3')
expected
['10101010101010101010101010101010101010101010101010111011101110111011101110111011101110111011101100001000000000000100010100000000000000000010110000000000000000000000000001100101010000000001000101101100010101010000000100000010000000110000010000001010000000000000000000000010000000000110010000000000011001010000000000010000000000000000000000000000000000010000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111', '3']
checking packet 0
test_data/action_chain1.out
output
('00000000000000000000000100000001000000000000000000000010000000100000001100000011011111110110011001110111011101111000100000000000', '2')
('00000000000000000000001000000010000000000000000000000011000000110000010000000100000001110110011001110111011101111000100000000000', '3')
('0000000100000001000000010000000100000010000000100000001000000010000000110000001101111111001001100010010100000000001001010111111100000001000000100000001100000100', '2')
('000000010000000100000001000000010000001000000010000000100000001000000011000000110111111101100110001001010010010100100111111111110011001100110011001010000111111100000001000000100000001100000100', '2')
expected
['00000000000000000000000100000001************************************************0111111101100110', '2']
['00000000000000000000001000000010************************************************0000011101100110', '3']
['0000000100000001000000010000000100000010000000100000001000000010000000110000001101111111001001100010010100000000001001010111111100000001000000100000001100000100', '2']
['000000010000000100000001000000010000001000000010000000100000001000000011000000110111111101100110001001010010010100100111111111110011001100110011001010000111111100000001000000100000001100000100', '2']
checking packet 0
checking packet 1
checking packet 2
checking packet 3
test_data/action_inline1.out
output
('0000000000000000000000010000000100000000000000000000001000000010000000000000000000000011000000110000000000000000000001000000010001111111011001100111011110001000', '2')
('0000000000000000000000100000001000000000000000000000001100000011000000000000000000000100000001000000000000000000000001000000010000000111011001100111011110001000', '3')
expected
['00000000000000000000000100000001************************************************************************************************0111111101100110', '2']
['00000000000000000000001000000010************************************************************************************************0000011101100110', '3']
checking packet 0
checking packet 1
test_data/action_inline2.out
output
('0000000000000000000000010000000100000000000000000000001000000010000000000000000000000011000000110000000000000000000001000000010001100110011001100111011110001000', '2')
('0000000000000000000000100000001000000000000000000000001100000011000000000000000000000100000001000000000000000000000001000000010001100110011001100111011110001000', '3')
expected
['00000000000000000000000100000001************************************************************************************************0110011001100110', '2']
['00000000000000000000001000000010************************************************************************************************0110011001100110', '3']
checking packet 0
checking packet 1
test_data/basic_routing.out
output
('00000000000000110000001100000011000000110000001100000001000000110000001100000011000000110000001100001000000000000100010100000000000000000010110000000000000000000000000001100101001111110001000101101101010101010000000100000010000000110000010000001010000000000000000000000010000000000110010000000000011001010000000000010000000000000000000000000000000000010000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111', '3')
('00000000000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100001000000000000100010100000000000000000010110000000000000000000000000001100101001111110001000110110101101011000000000100000010000000110000010011000000101010000000000100000010000000000110010000000000011001010000000000010000000000000000000000000000000000010000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111', '1')
expected
['0000000000000011000000110000001100000011000000110000000100000011000000110000001100000011000000110000100000000000010001010000000000000000001011000000000000000000000000000110010100111111000100010110****010101010000000100000010000000110000010000001010000000000000000000000010000000000110010000000000011001010000000000010000000000000000000000000000000000010000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111', '3']
['0000000000000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000100000000000010001010000000000000000001011000000000000000000000000000110010100111111000100011011****101011000000000100000010000000110000010011000000101010000000000100000010000000000110010000000000011001010000000000010000000000000000000000000000000000010000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111', '1']
checking packet 0
checking packet 1
test_data/bigfield1.out
output
('000000010000000100000001000000010000000000000000000000100000001001010001010000010011000100100001000100010000000101010101011001100111011110001000', '2')
('000000100000001000000010000000100000000000000000000000110000001100000000000000000000000000000000000000000000000001010101011001100111011110001000', '3')
expected
['00000001000000010000000100000001********************************010100010100000100110001001000010001000100000001********01100110', '2']
['00000010000000100000001000000010********************************000000000000000000000000000000000000000000000000********01100110', '3']
checking packet 0
checking packet 1
test_data/bridge1.out
output
('0000000100000001000000010000000100000000000000000000001000000010000000110000001101111111011001100111011110001000', '2')
('0000001000000010000000100000001000000000000000000000001100000011000001000000010000000111011001100111011110001000', '3')
expected
['00000001000000010000000100000001************************************************0111111101100110', '2']
['00000010000000100000001000000010************************************************0000011101100110', '3']
checking packet 0
checking packet 1
test_data/counter1.out
output
('101000011010001010100011101001001010010110100110', '2')
('101000011010001010100011101001001010010110100110', '2')
('101000011010001010100011101001001010010110100110', '2')
('1011000110110010101100111011010010110101101101100000000000000001', '3')
('1011000110110010101100111011010010110101101101100000000000000010', '3')
('1011000110110010101100111011010010110101101101100000000000000011', '3')
('1011000110110010101100111011010010110101101101100000000000000100', '3')
('1011000110110010101100111011010010110101101101100000000000000101', '3')
('1011000110110010101100111011010010110101101101100000000000000110', '3')
('1011000110110010101100111011010010110101101101100000000000000111', '3')
('1011000110110010101100111011010010110101101101100000000000001000', '3')
('1011000110110010101100111011010010110101101101100000000000001001', '3')
('1011000110110010101100111011010010110101101101100000000000010000', '3')
('1011000110110010101100111011010010110101101101100000000000010001', '3')
('1011000110110010101100111011010010110101101101100000000000010010', '3')
('1011000110110010101100111011010010110101101101100000000000010011', '3')
('1011000110110010101100111011010010110101101101100000000000010100', '3')
('1011000110110010101100111011010010110101101101100000000000010101', '3')
('1011000110110010101100111011010010110101101101100000000000010110', '3')
('1011000110110010101100111011010010110101101101100000000000010111', '3')
('1011000110110010101100111011010010110101101101100000000000011000', '3')
('1011000110110010101100111011010010110101101101100000000000011001', '3')
('1011000110110010101100111011010010110101101101100000000000100000', '3')
expected

test_data/counter2.out
output
('1010000110100010101000111010010010100101101001100000000000000000', '2')
('1010000110100010101000111010010010100101101001100000000000000001', '2')
('1010000110100010101000111010010010100101101001100000000000000010', '2')
('1011000110110010101100111011010010110101101101100000000000000001', '3')
('1011000110110010101100111011010010110101101101100000000000000010', '3')
('1011000110110010101100111011010010110101101101100000000000000011', '3')
('1011000110110010101100111011010010110101101101100000000000000100', '3')
('1011000110110010101100111011010010110101101101100000000000000101', '3')
('1011000110110010101100111011010010110101101101100000000000000110', '3')
('1011000110110010101100111011010010110101101101100000000000000111', '3')
('1011000110110010101100111011010010110101101101100000000000001000', '3')
('1011000110110010101100111011010010110101101101100000000000001001', '3')
('1011000110110010101100111011010010110101101101100000000000010000', '3')
('1011000110110010101100111011010010110101101101100000000000010001', '3')
('1011000110110010101100111011010010110101101101100000000000010010', '3')
('1011000110110010101100111011010010110101101101100000000000010011', '3')
('1011000110110010101100111011010010110101101101100000000000010100', '3')
('1011000110110010101100111011010010110101101101100000000000010101', '3')
('1011000110110010101100111011010010110101101101100000000000010110', '3')
('1011000110110010101100111011010010110101101101100000000000010111', '3')
('1011000110110010101100111011010010110101101101100000000000011000', '3')
('1011000110110010101100111011010010110101101101100000000000011001', '3')
('1011000110110010101100111011010010110101101101100000000000100000', '3')
expected

test_data/counter3.out
output
('1010000110100010101000111010010010100101101001100000000000000000', '2')
('101000011010001010100011101001001010010110100110000000000000000100000000', '2')
('10100001101000101010001110100100101001011010011000000000000000100000000000000000', '2')
('1011000110110010101100111011010010110101101101100000000000000001', '3')
('1011000110110010101100111011010010110101101101100000000000000010', '3')
('1011000110110010101100111011010010110101101101100000000000000011', '3')
('1011000110110010101100111011010010110101101101100000000000000100', '3')
('1011000110110010101100111011010010110101101101100000000000000101', '3')
('1011000110110010101100111011010010110101101101100000000000000110', '3')
('1011000110110010101100111011010010110101101101100000000000000111', '3')
('1011000110110010101100111011010010110101101101100000000000001000', '3')
('1011000110110010101100111011010010110101101101100000000000001001', '3')
('1011000110110010101100111011010010110101101101100000000000010000', '3')
('1011000110110010101100111011010010110101101101100000000000010001', '3')
('1011000110110010101100111011010010110101101101100000000000010010', '3')
('1011000110110010101100111011010010110101101101100000000000010011', '3')
('1011000110110010101100111011010010110101101101100000000000010100', '3')
('1011000110110010101100111011010010110101101101100000000000010101', '3')
('1011000110110010101100111011010010110101101101100000000000010110', '3')
('1011000110110010101100111011010010110101101101100000000000010111', '3')
('1011000110110010101100111011010010110101101101100000000000011000', '3')
('1011000110110010101100111011010010110101101101100000000000011001', '3')
('1011000110110010101100111011010010110101101101100000000000100000', '3')
expected

test_data/counter4.out
output
('1010000110100010101000111010010010100101101001100000000000000000', '2')
('1010000110100010101000111010010010100101101001100000000000000001', '2')
('1010000110100010101000111010010010100101101001100000000000000010', '2')
('1011000110110010101100111011010010110101101101100000000000000001', '3')
('1011000110110010101100111011010010110101101101100000000000000010', '3')
('1011000110110010101100111011010010110101101101100000000000000011', '3')
('1011000110110010101100111011010010110101101101100000000000000100', '3')
('1011000110110010101100111011010010110101101101100000000000000101', '3')
('1011000110110010101100111011010010110101101101100000000000000110', '3')
('1011000110110010101100111011010010110101101101100000000000000111', '3')
('1011000110110010101100111011010010110101101101100000000000001000', '3')
('1011000110110010101100111011010010110101101101100000000000001001', '3')
('1011000110110010101100111011010010110101101101100000000000010000', '3')
('1011000110110010101100111011010010110101101101100000000000010001', '3')
('1011000110110010101100111011010010110101101101100000000000010010', '3')
('1011000110110010101100111011010010110101101101100000000000010011', '3')
('1011000110110010101100111011010010110101101101100000000000010100', '3')
('1011000110110010101100111011010010110101101101100000000000010101', '3')
('1011000110110010101100111011010010110101101101100000000000010110', '3')
('1011000110110010101100111011010010110101101101100000000000010111', '3')
('1011000110110010101100111011010010110101101101100000000000011000', '3')
('1011000110110010101100111011010010110101101101100000000000011001', '3')
('1011000110110010101100111011010010110101101101100000000000100000', '3')
('1100000111000010110000111100010011000101110001100000000000000001', '5')
('1100000111000010110000111100010011000101110001100000000000000010', '5')
('1100000111000010110000111100010011000101110001100000000000000011', '5')
expected

test_data/counter5.out
output

expected

test_data/exact_match1.out
output
('0000000100000001000000010000000100000000000000000000001000000010000000110000001101111111011001100111011110001000', '2')
('0000001000000010000000100000001000000000000000000000001100000011000001000000010000000111011001100111011110001000', '3')
expected
['00000001000000010000000100000001************************************************0111111101100110', '2']
['00000010000000100000001000000010************************************************0000011101100110', '3']
checking packet 0
checking packet 1
test_data/exact_match2.out
output
('0000000100000001000000010000000100000000000000000000001000000010000000110000001101111111011001100111011110001000', '2')
('0000001000000010000000100000001000000000000000000000001100000011000001000000010000000111011001100111011110001000', '3')
expected
['00000001000000010000000100000001************************************************0111111101100110', '2']
['00000010000000100000001000000010************************************************0000011101100110', '3']
checking packet 0
checking packet 1
test_data/exact_match3.out
output
('0000000100000001000000010000000100000000000000000000001000000010000000110000001101111111011001100111011110001000', '2')
('0000001000000010000000100000001000000000000000000000001100000011000001000000010000000111011001100111011110001000', '3')
expected
['00000001000000010000000100000001************************************************0111111101100110', '2']
['00000010000000100000001000000010************************************************0000011101100110', '3']
checking packet 0
checking packet 1
test_data/exact_match4.out
output
('0000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000000000000000000100000001000000000000000000000001000000010000000000000000000000010000000100000000000000000000000100000001001111111011001100111011110001000', '2')
('0000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000000000000000000000110000001100000000000000000000001100000011000000000000000000000011000000110000000000000000000000110000001100000111011001100111011110001000', '3')
expected


checking packet 0
checking packet 1
test_data/exact_match5.out
output
('0000000100000010000000110000010000000101000001100000011100001000000010010000101000001011000011000000110100001110000011110001000000010001000100100001001100010100000101010001011000010111000110000001100100011010000110110001110000011101000111100001111100100000001000010010001000100011001001000010010100100110001001110010100000101001001010100010101100101100001011010010111000101111001100000000000000000000000000100000001000000000000000000000001000000010000000000000000000000010000000100000000000000000000000100000001001111111011001100111011110001000', '2')
('0000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000001000000010000000100000000000000000000000110000001100000000000000000000001100000011000000000000000000000011000000110000000000000000000000110000001100000111011001100111011110001000', '3')
expected
['000000010000001000000011000001000000010100000110000001110000100000001001000010100000101100001100000011010000111000001111000100000001000100010010000100110001010000010101000101100001011100011000000110010001101000011011000111000001110100011110000111110010000000100001001000100010001100100100001001010010011000100111001010000010100100101010001010110010110000101101001011100010111100110000********************************************************************************************************************************0111111101100110', '2']

checking packet 0
checking packet 1
test_data/exact_match_mask1.out
output
('0000000100000001000000010000000100000000000000000000001000000010000000110000001101111111011001100111011110001000', '2')
('0000001000000010000000100000001000000000000000000000001100000011000001000000010000000111011001100111011110001000', '3')
expected
['00000001000000010000000100000001************************************************0111111101100110', '2']
['00000010000000100000001000000010************************************************0000011101100110', '3']
checking packet 0
checking packet 1
test_data/exact_match_valid1.out
output
('000000010000000100000001000000010000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001001011101100100010001100110100010000000001000000010000000100000001000000100000001000000010000000100000001100000011000000110000001100000100000001000000010000000100000100010010001000110011010001000101010101100110', '2')
('000000010000000100000001000000011111001011110010000000100000001000000011000000110000001100000011000001000000010000000100000001001010101000100010001100110100010000000001000000010000000100000001000000100000001000000010000000100000001100000011000000110000001100000100000001000000010000000100000100010010001000110011010001000101010101100110', '3')
expected
['000000010000000100000001000000010000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001001011101100100010001100110100010000000001000000010000000100000001000000100000001000000010000000100000001100000011000000110000001100000100000001000000010000000100000100010010001000110011010001000101010101100110', '2']
['000000010000000100000001000000011111001011110010000000100000001000000011000000110000001100000011000001000000010000000100000001001010101000100010001100110100010000000001000000010000000100000001000000100000001000000010000000100000001100000011000000110000001100000100000001000000010000000100000100010010001000110011010001000101010101100110', '3']
checking packet 0
checking packet 1
test_data/gateway1.out
output
('000000010000000100000001000000010000000000000000000000100000001000000001000000010111011110001000', '2')
('000000010000000100000001000000010000000100000001000000010000000100000010011001100111011110001000', '3')
expected
['00000001000000010000000100000001********************************00000001000000010111011110001000', '2']
['000000010000000100000001000000010000000100000001000000010000000100000010011001100111011110001000', '3']
checking packet 0
checking packet 1
test_data/gateway2.out
output
('000000010000000100000001000000010000000000000000000000100000001000000001011101110111011100001010', '2')
('000000010000000100000001000000010000000100000001000000010000000100000010011001100111011110001000', '3')
expected
['00000001000000010000000100000001********************************00000001011101110111011100001010', '2']
['000000010000000100000001000000010000000100000001000000010000000100000010011001100111011110001000', '3']
checking packet 0
checking packet 1
test_data/gateway3.out
output
('000000010000000100000001000000010000000000000000000000100000001000000001011101111000100000001010', '2')
('000000010000000100000001000000010000000100000001000000010000000100000010011001100111011110001000', '3')
expected
['00000001000000010000000100000001********************************00000001011101111000100000001010', '2']
['000000010000000100000001000000010000000100000001000000010000000100000010011001100111011110001000', '3']
checking packet 0
checking packet 1
test_data/gateway4.out
output
('00000001000000010000000100000001000000000000000000000010000000100000001101100110011101111001100100010001001000100011001101000100', '2')
('00000001000000010000000100000001000000010000000100000001000000010000001001100110011101111000100000010001001000100011001101000100', '3')
('00000000000000000000000100000001000000010000000100000001000000010000001001100110011101111001100100010001001000100011001101000100', '3')
expected
['00000001000000010000000100000001********************************0000001101100110011101111001100100010001001000100011001101000100', '2']
['00000001000000010000000100000001000000010000000100000001000000010000001001100110011101111000100000010001001000100011001101000100', '3']
['00000000000000000000000100000001000000010000000100000001000000010000001001100110011101111001100100010001001000100011001101000100', '3']
checking packet 0
checking packet 1
checking packet 2
test_data/gateway5.out
output
('00010010001101000101011001111000000100100011010001010110011110000000001000000000000000000000000000000000000000000000000011110001', '2')
('00010010001101000101011001111000000100100011010001010110011110000000001000000000000000000000000000000000000000001000000011110010', '3')
('00010010001101000101011001111000000100100011010001010110011110000000011000000000000000000000000000000000000000001000000011110011', '3')
('00010010001101000101011001111000000100100011010001010110011110000000011000000000000000000000000000000000000000000000000011110100', '3')
expected
['00010010001101000101011001111000000100100011010001010110011110000000001000000000000000000000000000000000000000000000000011110001', '2']
['00010010001101000101011001111000000100100011010001010110011110000000001000000000000000000000000000000000000000001000000011110010', '3']
['00010010001101000101011001111000000100100011010001010110011110000000011000000000000000000000000000000000000000001000000011110011', '3']
['00010010001101000101011001111000000100100011010001010110011110000000011000000000000000000000000000000000000000000000000011110100', '3']
checking packet 0
checking packet 1
checking packet 2
checking packet 3
test_data/gateway6.out
output
('00010010001101000101011001111000000100100011010001010110011110000000000000000001000000000000000011110001', '2')
('00010010001101000101011001111000000100100011010001010110011110000000000000000010000000000000000011110010', '3')
('00010010001101000101011001111000000100100011010001010110011110000000000011110001000000000000000011110011', '2')
expected
['00010010001101000101011001111000000100100011010001010110011110000000000000000001000000000000000011110001', '2']
['00010010001101000101011001111000000100100011010001010110011110000000000000000010000000000000000011110010', '3']
['00010010001101000101011001111000000100100011010001010110011110000000000011110001000000000000000011110011', '2']
checking packet 0
checking packet 1
checking packet 2
test_data/gateway7.out
output
('00010010001101000101011001111000000100100011010001010110011110000000000000110010000000000000000011110001', '2')
('00010010001101000101011001111000000100100011010001010110011110000000000000110001000000000000000011110010', '3')
('00010010001101000101011001111000000100100011010001010110011110000000000011110001000000000000000011110011', '2')
('00010010001101000101011001111000000100100011010001010110011110000000000000000011000000000000000011110100', '3')
expected
['00010010001101000101011001111000000100100011010001010110011110000000000000110010000000000000000011110001', '2']
['00010010001101000101011001111000000100100011010001010110011110000000000000110001000000000000000011110010', '3']
['00010010001101000101011001111000000100100011010001010110011110000000000011110001000000000000000011110011', '2']
['00010010001101000101011001111000000100100011010001010110011110000000000000000011000000000000000011110100', '3']
checking packet 0
checking packet 1
checking packet 2
checking packet 3
test_data/gateway8.out
output
('000000010000000100000001000000010000000100000001000000010000000100000001000000010111011110001000', '2')
('000000010000000100000001000000010000000100000001000000010000000100000001000000100111011110001000', '2')
('000000010000000100000001000000010000000100000001000000010000000100000010000000110111011110001000', '3')
('000000010000000100000001000000010000000100000001000000010000000100000010000001000111011110001000', '3')
('000000010000000100000001000000010000000100000001000000010000000100000001000001010111011110001000', '2')
('000000010000000100000001000000010000000100000001000000010000000100000010000001100111011110001000', '3')
('000000010000000100000001000000010000000100000001000000010000000100000001000010100111011110001000', '2')
('000000010000000100000001000000010000000100000001000000010000000100000010000010110111011110001000', '3')
('000000010000000100000001000000010000000100000001000000010000000100000001000100010111011110001000', '2')
('000000010000000100000001000000010000000100000001000000010000000100000010000100100111011110001000', '3')
('000000010000000100000001000000010000000100000001000000010000000100000001000100110111011110001000', '2')
('000000010000000100000001000000010000000100000001000000010000000100000010000101000111011110001000', '3')
expected
['000000010000000100000001000000010000000100000001000000010000000100000001000000010111011110001000', '2']
['000000010000000100000001000000010000000100000001000000010000000100000001000000100111011110001000', '2']
['000000010000000100000001000000010000000100000001000000010000000100000010000000110111011110001000', '3']
['000000010000000100000001000000010000000100000001000000010000000100000010000001000111011110001000', '3']
['000000010000000100000001000000010000000100000001000000010000000100000001000001010111011110001000', '2']
['000000010000000100000001000000010000000100000001000000010000000100000010000001100111011110001000', '3']
['000000010000000100000001000000010000000100000001000000010000000100000001000010100111011110001000', '2']
['000000010000000100000001000000010000000100000001000000010000000100000010000010110111011110001000', '3']
['000000010000000100000001000000010000000100000001000000010000000100000001000100010111011110001000', '2']
['000000010000000100000001000000010000000100000001000000010000000100000010000100100111011110001000', '3']
['000000010000000100000001000000010000000100000001000000010000000100000001000100110111011110001000', '2']
['000000010000000100000001000000010000000100000001000000010000000100000010000101000111011110001000', '3']
checking packet 0
checking packet 1
checking packet 2
checking packet 3
checking packet 4
checking packet 5
checking packet 6
checking packet 7
checking packet 8
checking packet 9
checking packet 10
checking packet 11
test_data/hash_action_basic.out
output
('00010001000100010001000100010001001000100010001000100010001000100000000100000001000000100000001000000011000000110000010000000100', '1')
expected
['00010001000100010001000100010001001000100010001000100010001000100000000100000001000000100000001000000011000000110000010000000100', '1']
checking packet 0
test_data/hash_action_gateway.out
output
('00010001000100010001000100010001001000100010001000100010001000100000000100000001000000100000001000000011000000110000010000000100', '1')
expected
['00010001000100010001000100010001001000100010001000100010001000100000000100000001000000100000001000000011000000110000010000000100', '1']
checking packet 0
test_data/hash_action_two_separate.out
output
('00010001000100010001000100010001001000100010001000100010001000100000000100000001000000100000001000000011000000110000010000000100', '1')
('00100010001000100010001000100010001100110011001100110011001100110000001000000010000000110000001100000100000001000000010100000101', '2')
('00110011001100110011001100110011010001000100010001000100010001000000001100000011000001000000010000000101000001010000011000000110', '2')
('01000100010001000100010001000100010101010101010101010101010101010000010000000100000001010000010100000110000001100000011100000111', '3')
expected
['00010001000100010001000100010001001000100010001000100010001000100000000100000001000000100000001000000011000000110000010000000100', '1']
['00100010001000100010001000100010001100110011001100110011001100110000001000000010000000110000001100000100000001000000010100000101', '2']
['00110011001100110011001100110011010001000100010001000100010001000000001100000011000001000000010000000101000001010000011000000110', '2']
['01000100010001000100010001000100010101010101010101010101010101010000010000000100000001010000010100000110000001100000011100000111', '3']
checking packet 0
checking packet 1
checking packet 2
checking packet 3
test_data/hitmiss.out
output
('0000000000000000000000010000000100000000000000000000001000000010000000000000000000000011000000110000000000000000000001000000010001111111011001100111011110001000', '2')
('0000000000000000000000100000001000000000000000000000001100000011000000000000000000000100000001000000000000000000000001000000010000000111011001100111011110001000', '3')
('0000000000000000000000010000000100100010001000100010001000100010000000000000000000000011000000110000000000000000000001000000010000000001011001100111011110001000', '4')
('0000000000000000000100010001000100100010001000100010001000100010000000000000000000000011000000110000000000000000000001000000010000000010011001100111011110001000', '5')
expected
['00000000000000000000000100000001************************************************************************************************0111111101100110', '2']
['00000000000000000000001000000010************************************************************************************************0000011101100110', '3']
['0000000000000000000000010000000100100010001000100010001000100010000000000000000000000011000000110000000000000000000001000000010000000001011001100111011110001000', '4']
['0000000000000000000100010001000100100010001000100010001000100010000000000000000000000011000000110000000000000000000001000000010000000010011001100111011110001000', '5']
checking packet 0
checking packet 1
checking packet 2
checking packet 3
test_data/instruct5.out
output
('0000000100000001000000010000000100000010000000100000001000000010000000110000001100000011000000010000000000000000001000010000000000000000000000010000001000000011', '1')
('000000010000000100000001000000010000001000000010000000100000001000000011000000110000001100000001000000000000000000100001000000011010101010111011110011000000000000000000000000010000001000000011', '1')
('000000010000000100000001000000100000001000000010000000100000001000000011000000110000001100000001000000000000000000100010000000010000000000000000001100100000000000000000000000010000001000000011', '1')
('00000001000000010000000100000010000000100000001000000010000000100000001100000011000000110000000100000000000000000010001000000001000000000000000000110010000000011010101010111011110011000000000000000000000000010000001000000011', '1')
('00000001000000010000000100000011000000100000001000000010000000100000001100000011000000110000000000000000000000010000001000000011', '1')
('0000000100000001000000010000001100000010000000100000001000000010000000110000001100000011000000011101110111101110111111110000000000000000000000010000001000000011', '1')
expected
['0000000100000001000000010000000100000010000000100000001000000010000000110000001100000011000000010000000000000000001000010000000000000000000000010000001000000011', '1']
['000000010000000100000001000000010000001000000010000000100000001000000011000000110000001100000001000000000000000000100001000000011010101010111011110011000000000000000000000000010000001000000011', '1']
['000000010000000100000001000000100000001000000010000000100000001000000011000000110000001100000001000000000000000000100010000000010000000000000000001100100000000000000000000000010000001000000011', '1']
['00000001000000010000000100000010000000100000001000000010000000100000001100000011000000110000000100000000000000000010001000000001000000000000000000110010000000011010101010111011110011000000000000000000000000010000001000000011', '1']
['00000001000000010000000100000011000000100000001000000010000000100000001100000011000000110000000000000000000000010000001000000011', '1']
['0000000100000001000000010000001100000010000000100000001000000010000000110000001100000011000000011101110111101110111111110000000000000000000000010000001000000011', '1']
checking packet 0
checking packet 1
checking packet 2
checking packet 3
checking packet 4
checking packet 5
test_data/instruct6.out
output

expected
['000000010000000100000001000000010000001000000010000000100000001000010001001100110011001101000100010101010110011001110111100010001001100110101010', '2']
['000000100000001000000010000000100000000100000001000000010000000100010001001100100011001101000100010101010110011001110111100010001001100110101010', '3']
Error: fewer packets than expected (expected at least 2, got 0)
checking packet 0
Traceback (most recent call last):
  File "check_output.py", line 63, in <module>
    o = out_packets[i]
IndexError: list index out of range
test_data/parser_dc_full.out
output
('000000000000000100000001000000010000000100000001000000010000000100000010000000100000001000000010000000100000001010010000000000000000000000000000000100010001000100100010001000100011001100110011010001000100010001010101010101011001000100000000101010101010101010010001000000001011101110111011100010000100011100000000000000000000000100000001010001010000000000000100000000000000000000000000000000000000000001000000000100010111011011101011100000000000000000000000000000011000000000000000000000000000000100000000011001000000000001100101000000110000000000000000000000000000000000000000000000000000000111111111', '10')
expected
['000000000000000100000001000000010000000100000001000000010000000100000010000000100000001000000010000000100000001010010000000000000000000000000000000100010001000100100010001000100011001100110011010001000100010001010101010101011001000100000000101010101010101010010001000000001011101110111011100010000100011100000000000000000000000000000001000000000000000000000001000000010100010100000000000001000000000000000000000000000000000000000000010000000001000101110110111010111000000000000000000000000000000110000000000000000000000000000001000000000110010000000000011001010000001100000000000000000000000011111111', '10']
checking packet 0
Error: unexpected bit in packet at index 327, (expected 0, got 1)
test_data/repeater.out
output
('0000001000000010000000100000001000000010000000100000001000000010', '2')
('0000010000000100000001000000010000000100000001000000010000000100', '1')
expected
['0000001000000010000000100000001000000010000000100000001000000010', '2']
['0000010000000100000001000000010000000100000001000000010000000100', '1']
checking packet 0
checking packet 1
test_data/ternary_match1.out
output
('0000000000000000000000010000000100000000000000000000001000000010000000000000000000000011000000110000000000000000000001000000010001111111011001100111011110001000', '2')
('0000000000000000000000100000001000000000000000000000001100000011000000000000000000000100000001000000000000000000000001000000010000000111011001100111011110001000', '3')
expected
['00000000000000000000000100000001************************************************************************************************0111111101100110', '2']
['00000000000000000000001000000010************************************************************************************************0000011101100110', '3']
checking packet 0
checking packet 1
test_data/ternary_match2.out
output
('000000000000000000000000000000010000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000000001100110', '4')
('000000000000000000000000000000110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000000101100110', '4')
('000000000000000000000000000001110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000001001100110', '4')
('000000000000000000000000000011110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000001101100110', '4')
('000000000000000000000000000111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000010001100110', '4')
('000000000000000000000000001111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000010101100110', '4')
('000000000000000000000000011111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000011001100110', '4')
('000000000000000000000000111111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000011101100110', '4')
('000000000000000000000001111111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000100001100110', '4')
('000000000000000000000011111111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000100101100110', '4')
('000000000000000000000111111111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000101001100110', '4')
('000000000000000000001111111111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000101101100110', '4')
('000000000000000000011111111111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000110001100110', '4')
('000000000000000000111111111111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000110101100110', '4')
('000000000000000001111111111111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000111001100110', '4')
('000000000000000011111111111111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000000111101100110', '4')
('000000000000000111111111111111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000001000001100110', '4')
('000000000000001111111111111111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000001000101100110', '4')
('000000000000011111111111111111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000001001001100110', '4')
('000000000000111111111111111111110000001000000010000000100000001000000011000000110000001100000011000001000000010000000100000001000001001101100110', '4')
expected
['00000000000000000000000000000001************************************************************************************************0000000001100110', '4']
['00000000000000000000000000000011************************************************************************************************0000000101100110', '4']
['00000000000000000000000000000111************************************************************************************************0000001001100110', '4']
['00000000000000000000000000001111************************************************************************************************0000001101100110', '4']
['00000000000000000000000000011111************************************************************************************************0000010001100110', '4']
['00000000000000000000000000111111************************************************************************************************0000010101100110', '4']
['00000000000000000000000001111111************************************************************************************************0000011001100110', '4']
['00000000000000000000000011111111************************************************************************************************0000011101100110', '4']
['00000000000000000000000111111111************************************************************************************************0000100001100110', '4']
['00000000000000000000001111111111************************************************************************************************0000100101100110', '4']
['00000000000000000000011111111111************************************************************************************************0000101001100110', '4']
['00000000000000000000111111111111************************************************************************************************0000101101100110', '4']
['00000000000000000001111111111111************************************************************************************************0000110001100110', '4']
['00000000000000000011111111111111************************************************************************************************0000110101100110', '4']
['00000000000000000111111111111111************************************************************************************************0000111001100110', '4']
['00000000000000001111111111111111************************************************************************************************0000111101100110', '4']
['00000000000000011111111111111111************************************************************************************************0001000001100110', '4']
['00000000000000111111111111111111************************************************************************************************0001000101100110', '4']
['00000000000001111111111111111111************************************************************************************************0001001001100110', '4']
['00000000000011111111111111111111************************************************************************************************0001001101100110', '4']
checking packet 0
checking packet 1
checking packet 2
checking packet 3
checking packet 4
checking packet 5
checking packet 6
checking packet 7
checking packet 8
checking packet 9
checking packet 10
checking packet 11
checking packet 12
checking packet 13
checking packet 14
checking packet 15
checking packet 16
checking packet 17
checking packet 18
checking packet 19
test_data/ternary_match3.out
output
('0001000000010001000100100001001100100000001000010010001000100011001100000011000100110010001100110100000001000001010000100100001101111111011001100111011110001000', '2')
expected
['00010000000100010001001000010011************************************************************************************************0111111101100110', '2']
checking packet 0
test_data/ternary_match4.out
output
('000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100110', '4')
('000000000000000000000000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101100110', '4')
('000000000000000000000001000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001100110', '4')
('000000000000000000010001000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101100110', '4')
('000000000000000100010001000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001100110', '4')
('000000000001000100010001000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101100110', '4')
('000000010001000100010001000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001100110', '4')
('000100010001000100010001000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011101100110', '4')
('000100010001000100010001000100010000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000100001100110', '4')
('000100010001000100010001000100010000000000000000000000000001000100000000000000000000000000000000000000000000000000000000000000000000100101100110', '4')
('000100010001000100010001000100010000000000000000000000010001000100000000000000000000000000000000000000000000000000000000000000000000101001100110', '4')
('000100010001000100010001000100010000000000000000000100010001000100000000000000000000000000000000000000000000000000000000000000000000101101100110', '4')
('000100010001000100010001000100010000000000000001000100010001000100000000000000000000000000000000000000000000000000000000000000000000110001100110', '4')
('000100010001000100010001000100010000000000010001000100010001000100000000000000000000000000000000000000000000000000000000000000000000110101100110', '4')
('000100010001000100010001000100010000000100010001000100010001000100000000000000000000000000000000000000000000000000000000000000000000111001100110', '4')
('000100010001000100010001000100010001000100010001000100010001000100000000000000000000000000000000000000000000000000000000000000000000111101100110', '4')
('000100010001000100010001000100010001000100010001000100010001000100000000000000000000000000000001000000000000000000000000000000000001000001100110', '4')
('000100010001000100010001000100010001000100010001000100010001000100000000000000000000000000010001000000000000000000000000000000000001000101100110', '4')
('000100010001000100010001000100010001000100010001000100010001000100000000000000000000000100010001000000000000000000000000000000000001001001100110', '4')
('000100010001000100010001000100010001000100010001000100010001000100000000000000000001000100010001000000000000000000000000000000000001001101100110', '4')
expected
['00000000000000000000000000000001************************************************************************************************0000000001100110', '4']
['00000000000000000000000000010001************************************************************************************************0000000101100110', '4']
['00000000000000000000000100010001************************************************************************************************0000001001100110', '4']
['00000000000000000001000100010001************************************************************************************************0000001101100110', '4']
['00000000000000010001000100010001************************************************************************************************0000010001100110', '4']
['00000000000100010001000100010001************************************************************************************************0000010101100110', '4']
['00000001000100010001000100010001************************************************************************************************0000011001100110', '4']
['00010001000100010001000100010001************************************************************************************************0000011101100110', '4']
['00010001000100010001000100010001************************************************************************************************0000100001100110', '4']
['00010001000100010001000100010001************************************************************************************************0000100101100110', '4']
['00010001000100010001000100010001************************************************************************************************0000101001100110', '4']
['00010001000100010001000100010001************************************************************************************************0000101101100110', '4']
['00010001000100010001000100010001************************************************************************************************0000110001100110', '4']
['00010001000100010001000100010001************************************************************************************************0000110101100110', '4']
['00010001000100010001000100010001************************************************************************************************0000111001100110', '4']
['00010001000100010001000100010001************************************************************************************************0000111101100110', '4']
['00010001000100010001000100010001************************************************************************************************0001000001100110', '4']
['00010001000100010001000100010001************************************************************************************************0001000101100110', '4']
['00010001000100010001000100010001************************************************************************************************0001001001100110', '4']
['00010001000100010001000100010001************************************************************************************************0001001101100110', '4']
checking packet 0
checking packet 1
checking packet 2
checking packet 3
checking packet 4
checking packet 5
checking packet 6
checking packet 7
checking packet 8
checking packet 9
checking packet 10
checking packet 11
checking packet 12
checking packet 13
checking packet 14
checking packet 15
checking packet 16
checking packet 17
checking packet 18
checking packet 19
test_data/tmvalid.out
output
('0000000000000000000000010000000100000000000000000000001000000010000000000000000000000011000000110000000000000000000001000000010001111111011001100111011110001000', '2')
('0000000000000000000000100000001000000000000000000000001100000011000000000000000000000100000001000000000000000000000001000000010000000111011001100111011110001000', '3')
expected
['00000000000000000000000100000001************************************************************************************************0111111101100110', '2']
['00000000000000000000001000000010************************************************************************************************0000011101100110', '3']
checking packet 0
checking packet 1
PASSED: 38 / 40
FAILED: test_data/instruct6 test_data/parser_dc_full
